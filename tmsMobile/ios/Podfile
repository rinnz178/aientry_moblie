require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '10.0'

target 'tmsMobile' do
  config = use_native_modules!
  use_react_native!(:path => config["reactNativePath"])
  # Pods for tmsMobile
  pod 'react-native-config', :path => '../node_modules/react-native-config'
  pod 'react-native-netinfo', :path => '../node_modules/@react-native-community/netinfo'
  pod 'react-native-splash-screen', :path => '../node_modules/react-native-splash-screen'
  pod 'rn-fetch-blob', :path => '../node_modules/rn-fetch-blob'
  pod 'RNCAsyncStorage', :path => '../node_modules/@react-native-community/async-storage'
  pod 'RNFirebase', :path => '../node_modules/react-native-firebase/ios'
  pod 'Firebase/Messaging'
  pod 'Firebase/Core'
  pod 'Firebase/Crashlytics'

  pod 'react-native-cameraroll', :path => '../node_modules/@react-native-community/cameraroll'

  pod 'RNFS', :path => '../node_modules/react-native-fs'

  pod 'react-native-image-resizer', :path => '../node_modules/react-native-image-resizer'

  pod 'react-native-camera', :path => '../node_modules/react-native-camera'

pod 'react-native-camera', path: '../node_modules/react-native-camera', subspecs: [
  'FaceDetectorMLKit'
]

  pod 'RNIap', :path => '../node_modules/react-native-iap'

  pod 'react-native-webview', :path => '../node_modules/react-native-webview'

  pod 'RNDeviceInfo', :path => '../node_modules/react-native-device-info'

  post_install do |installer|
    installer.pods_project.targets.each do |target|
      if target.name == 'react-native-config'
        phase = target.project.new(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
        phase.shell_script = "cd ../../"\
        " && RNC_ROOT=./node_modules/react-native-config/"\
        " && export SYMROOT=$RNC_ROOT/ios/ReactNativeConfig"\
        " && ruby $RNC_ROOT/ios/ReactNativeConfig/BuildDotenvConfig.ruby"
        
        target.build_phases << phase
        target.build_phases.move(phase,0)
      end
    end
  end
  
  target 'tmsMobileTests' do
    inherit! :complete
    # Pods for testing
  end
  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  use_flipper!
  post_install do |installer|
    flipper_post_install(installer)
  end
end

target 'tmsMobile-tvOS' do
  # Pods for tmsMobile-tvOS

  target 'tmsMobile-tvOSTests' do
    inherit! :search_paths
    # Pods for testing
  end

end
